apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: projectsveltos
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: classifierreports.classify.projectsveltos.io
spec:
  group: classify.projectsveltos.io
  names:
    kind: ClassifierReport
    listKind: ClassifierReportList
    plural: classifierreports
    singular: classifierreport
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClassifierReport is the Schema for the classifierreports API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClassifierReportSpec defines the desired state of ClassifierReport
            properties:
              classifierName:
                description: ClassifierName is the name of the Classifier instance
                  this report is for.
                type: string
              clusterName:
                description: ClusterName is the name of the CAPI Cluster this ClusterReport
                  is for.
                type: string
              clusterNamespace:
                description: ClusterNamespace is the namespace of the CAPI Cluster
                  this ClusterReport is for.
                type: string
              match:
                description: Match indicates whether CAPI Cluster is currently a match
                  for the Classifier instance this report is for
                type: boolean
            required:
            - classifierName
            - clusterName
            - clusterNamespace
            - match
            type: object
          status:
            description: ClassifierReportStatus defines the observed state of ClassifierReport
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: classifiers.classify.projectsveltos.io
spec:
  group: classify.projectsveltos.io
  names:
    kind: Classifier
    listKind: ClassifierList
    plural: classifiers
    singular: classifier
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Classifier is the Schema for the classifiers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClassifierSpec defines the desired state of Classifier
            properties:
              classifierLabels:
                description: ClassifierLabels is set of labels, key,value pair, that
                  will be added to each cluster matching Classifier instance
                items:
                  properties:
                    key:
                      description: Key is the label key
                      type: string
                    value:
                      description: Value is the label value
                      type: string
                  required:
                  - key
                  - value
                  type: object
                type: array
              deployedResources:
                description: DeployedResources allows to classify based on current
                  deployed resources
                items:
                  properties:
                    group:
                      description: Group of the resource deployed in the CAPI Cluster.
                      type: string
                    kind:
                      description: Kind of the resource deployed in the CAPI Cluster.
                      minLength: 1
                      type: string
                    labelFilters:
                      description: LabelFilters allows to filter resources based on
                        current labels.
                      items:
                        properties:
                          key:
                            description: Key is the label key
                            type: string
                          operation:
                            description: Operation is the comparison operation
                            enum:
                            - Equal
                            - Different
                            type: string
                          value:
                            description: Value is the label value
                            type: string
                        required:
                        - key
                        - operation
                        - value
                        type: object
                      type: array
                    namespace:
                      description: Namespace of the resource deployed in the CAPI
                        Cluster. Empty for resources scoped at cluster level.
                      type: string
                    version:
                      description: Version of the resource deployed in the CAPI Cluster.
                      type: string
                  required:
                  - group
                  - kind
                  - version
                  type: object
                type: array
              kubernetesVersion:
                description: KubernetesVersion allows to classify based on current
                  kubernetes version
                type: string
            required:
            - classifierLabels
            type: object
          status:
            description: ClassifierStatus defines the observed state of Classifier
            properties:
              clusterInfo:
                description: ClusterInfo reference all the cluster-api Cluster where
                  Classifier has been/is being deployed
                items:
                  properties:
                    cluster:
                      description: Cluster references the CAPI Cluster
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                    failureMessage:
                      description: FailureMessage provides more information about
                        the error.
                      type: string
                    hash:
                      description: Hash represents the hash of the Classifier currently
                        deployed in the CAPI Cluster
                      format: byte
                      type: string
                    status:
                      description: Status represents the state of the feature in the
                        workload cluster
                      enum:
                      - Provisioning
                      - Provisioned
                      - Failed
                      - Removing
                      - Removed
                      type: string
                  required:
                  - cluster
                  - hash
                  - status
                  type: object
                type: array
              machingClusterStatuses:
                description: MatchingClusterRefs reference all the cluster-api Cluster
                  currently matching Classifier
                items:
                  properties:
                    clusterRef:
                      description: ClusterRef references the matching Cluster
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                    managedLabels:
                      description: ManagedLabels indicates the labels being managed
                        on the cluster by this Classifier instance
                      items:
                        type: string
                      type: array
                    unManagedLabels:
                      description: UnManagedLabel indicates the labels this Classifier
                        instance would like to manage but cannot because different
                        instance is already managing it
                      items:
                        properties:
                          failureMessage:
                            description: FailureMessage is a human consumable message
                              explaining the misconfiguration
                            type: string
                          key:
                            description: Key represents a label Classifier would like
                              to manage but cannot because currently managed by different
                              instance
                            type: string
                        required:
                        - failureMessage
                        - key
                        type: object
                      type: array
                  required:
                  - clusterRef
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: classifier-controller-manager
  namespace: projectsveltos
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: classifier-leader-election-role
  namespace: projectsveltos
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: classifier-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - classify.projectsveltos.io
  resources:
  - classifierreports
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - classify.projectsveltos.io
  resources:
  - classifiers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - classify.projectsveltos.io
  resources:
  - classifiers/finalizers
  verbs:
  - update
- apiGroups:
  - classify.projectsveltos.io
  resources:
  - classifiers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - lib.projectsveltos.io
  resources:
  - debuggingconfigurations
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: classifier-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: classifier-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: classifier-leader-election-rolebinding
  namespace: projectsveltos
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: classifier-leader-election-role
subjects:
- kind: ServiceAccount
  name: classifier-controller-manager
  namespace: projectsveltos
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: classifier-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: classifier-manager-role
subjects:
- kind: ServiceAccount
  name: classifier-controller-manager
  namespace: projectsveltos
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: classifier-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: classifier-proxy-role
subjects:
- kind: ServiceAccount
  name: classifier-controller-manager
  namespace: projectsveltos
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 1aea9208.projectsveltos.io
    # leaderElectionReleaseOnCancel defines if the leader should step down volume
    # when the Manager ends. This requires the binary to immediately end when the
    # Manager is stopped, otherwise, this setting is unsafe. Setting this significantly
    # speeds up voluntary leader transitions as the new leader don't have to wait
    # LeaseDuration time first.
    # In the default scaffold provided, the program ends immediately after
    # the manager stops, so would be fine to enable this option. However,
    # if you are doing or is intended to do any operation such as perform cleanups
    # after the manager stops then its usage might be unsafe.
    # leaderElectionReleaseOnCancel: true
kind: ConfigMap
metadata:
  name: classifier-manager-config
  namespace: projectsveltos
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: classifier-controller-manager-metrics-service
  namespace: projectsveltos
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: classifier-controller-manager
  namespace: projectsveltos
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: gianlucam76/classifier-amd64:dev
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 500m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.12.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: classifier-controller-manager
      terminationGracePeriodSeconds: 10
